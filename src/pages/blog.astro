---
import { readAll } from "../lib/markdoc/read";
import { blog } from "../lib/markdoc/frontmatter.schema";
import PageLayout from "../layouts/PageLayout.astro";
import PageMeta from "../components/PageMeta.astro";
import TagList from "../components/TagList.astro";
import BlogPostItem from "../components/BlogPostItem.astro";
import { SITE_TITLE } from "../config";
import { getReadingTime } from "../lib/reading-time";

const posts = await readAll({
  directory: "blog",
  frontmatterSchema: blog,
});

const sortedPosts = posts
  .filter((p) => p.frontmatter.draft !== true)
  .sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf(),
  );

const postsWithMeta = sortedPosts.map((post) => {
  const { words, minutes } = getReadingTime(post.rawContent);
  return { ...post, words, minutes };
});

// Get all unique tags
const allTags = new Set<string>();
sortedPosts.forEach((post) => {
  if (post.frontmatter.external === false && post.frontmatter.tags) {
    post.frontmatter.tags.forEach((tag: string) => allTags.add(tag));
  }
});
const uniqueTags = Array.from(allTags).sort();
---

<PageLayout>
  <PageMeta
    title={`Tech Blog | ${SITE_TITLE}`}
    description="Technical blog covering Hyprland development, DevOps practices, observability, distributed systems, and automation. Articles on rsyslog, Grafana Loki, Promtail, Hyprland monitor management, and event-driven workflows."
    keywords={[
      "Tech Blog",
      "DevOps Blog",
      "Hyprland Blog",
      "SRE Blog",
      "Software Engineering Blog",
      "Distributed Systems",
      "Observability",
      "Monitoring",
      "Grafana Loki",
      "Promtail",
      "Rsyslog",
      "Hyprland",
      "HyprDynamicMonitors",
      "HyprWhenThen",
      "Wayland",
      "Linux",
      "System Administration",
      "Cloud Architecture",
      "Automation",
      "Open Source",
      "Go Programming",
      "Python",
      "TypeScript",
    ]}
    slot="meta"
  />
  <section slot="main">
    <h1 class="text-4xl font-bold mb-4">Technical Blog</h1>
    <h2 class="text-2xl font-semibold mb-6">All Posts</h2>
    <ul class="space-y-6">
      {postsWithMeta.map((post) => <BlogPostItem post={post} />)}
    </ul>

    {
      uniqueTags.length > 0 && (
        <div class="mb-8 mt-8">
          <h2 class="font-semibold text-text-muted mb-3">Browse by tag</h2>
          <TagList tags={uniqueTags} />
        </div>
      )
    }
  </section>
</PageLayout>
