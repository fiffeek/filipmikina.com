---
import { readAll } from "../lib/markdoc/read";
import { blog } from "../lib/markdoc/frontmatter.schema";
import PageLayout from "../layouts/PageLayout.astro";
import PageMeta from "../components/PageMeta.astro";
import { SITE_TITLE } from "../config";
import { getReadingTime } from "../lib/reading-time";

const posts = await readAll({
  directory: "blog",
  frontmatterSchema: blog,
});

const sortedPosts = posts
  .filter((p) => p.frontmatter.draft !== true)
  .sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf(),
  );

const postsWithMeta = sortedPosts.map((post) => {
  const { words, minutes } = getReadingTime(post.rawContent);
  return { ...post, words, minutes };
});
---

<PageLayout>
  <PageMeta
    title={`Tech Blog | ${SITE_TITLE}`}
    description="Technical blog covering Hyprland development, DevOps practices, observability, distributed systems, and automation. Articles on rsyslog, Grafana Loki, Promtail, Hyprland monitor management, and event-driven workflows."
    keywords={[
      "Tech Blog",
      "DevOps Blog",
      "Hyprland Blog",
      "SRE Blog",
      "Software Engineering Blog",
      "Distributed Systems",
      "Observability",
      "Monitoring",
      "Grafana Loki",
      "Promtail",
      "Rsyslog",
      "Hyprland",
      "HyprDynamicMonitors",
      "HyprWhenThen",
      "Wayland",
      "Linux",
      "System Administration",
      "Cloud Architecture",
      "Automation",
      "Open Source",
      "Go Programming",
      "Python",
      "TypeScript",
    ]}
    slot="meta"
  />
  <section slot="main">
    <h1 class="text-4xl font-bold mb-8">Technical Blog</h1>
    <ul class="space-y-6">
      {
        postsWithMeta.map((post) => {
          const formattedDate = new Date(
            post.frontmatter.date,
          ).toLocaleDateString("en-us", {
            year: "numeric",
            month: "short",
            day: "numeric",
          });
          return (
            <li>
              <div class="title mb-2">
                {post.frontmatter.external ? (
                  <a
                    href={post.frontmatter.url}
                    target="_blank"
                    class="unset hover:text-text-link text-lg font-semibold"
                  >
                    <span>{post.frontmatter.title}</span>
                    <span>
                      <i class="ml-1 mr-1 text-[12px] pb-2 fa-solid fa-up-right-from-square pt-1" />
                    </span>
                  </a>
                ) : (
                  <a
                    href={`/blog/${post.slug}`}
                    class="unset hover:text-text-link text-lg font-semibold"
                  >
                    {post.frontmatter.title}
                  </a>
                )}
              </div>
              <div class="flex flex-wrap items-center gap-2 text-text-muted text-sm mb-2">
                <time datetime={post.frontmatter.date.toISOString()}>
                  {formattedDate}
                </time>
                {!post.frontmatter.external && (
                  <>
                    <span>•</span>
                    <span>{post.minutes} min read</span>
                    <span>•</span>
                    <span>{post.words.toLocaleString()} words</span>
                  </>
                )}
              </div>
              {!post.frontmatter.external && post.frontmatter.description && (
                <p class="text-text-body text-sm leading-relaxed m-0">
                  {post.frontmatter.description}
                </p>
              )}
            </li>
          );
        })
      }
    </ul>
  </section>
</PageLayout>
