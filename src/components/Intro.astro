---

---

<section class="mb-8">
  <div class="mb-4">
    <h1
      class="font-extrabold text-5xl md:text-6xl tracking-tight pt-4 pb-2 overflow-hidden"
    >
      <span
        class="bg-gradient-to-br from-[#fb923c] via-[#f97316] to-[#ea580c] dark:from-primary-main dark:via-primary-main dark:to-primary-main bg-clip-text text-transparent"
      >
        FILIP MIKINA
      </span>
    </h1>
    <p class="text-xl pb-4">
      Solving problems with<sup class="text-xs">(out)</sup> code, duct tape, and
      <span class="line-through opacity-70 hover:opacity-100">coffee</span> empathy.
    </p>
  </div>
  <div>
    <h2 class="text-2xl pt-4">A little about me</h2>
    <p class="mb-5 mt-2">
      <span class="font-semibold">Let's start with the obvious:</span>
      the best code I've ever written is no code at all. I work at the intersection
      of <span class="font-medium text-gray-900 dark:text-white">SRE</span>
      and <span class="font-medium text-gray-900 dark:text-white"
        >software engineering</span
      > — I love writing code, but I'm always weighing whether it's worth the long-term
      cost. Every line you write is one you have to maintain, debug, and eventually
      replace. That's why I think carefully about adoption, rollout plans, and whether
      a solution justifies its complexity. <br />
      <br />
      At the same time, technology fascinates me. When I have the time, I love pushing
      boundaries and going right up to the edge of overengineering in personal projects.
      It's how I experiment, learn, and, honestly, what keeps me excited about building
      things. <br />
    </p>
    <h2 class="text-2xl pt-4">What I work on</h2>
    <p class="mb-5 mt-2">
      Most days, you'll find me wrestling with distributed systems, making
      monitoring tools that don't suck, and trying to convince CI/CD pipelines
      to play nice. I've built systems that churn through 500k+ monitoring
      samples per second, process thousands of messages per second, and somehow
      managed to help teams ship faster without everything catching fire
      (well... not always?).
      <br />
      <br />
      Language-wise, I'm agnostic. I've shipped production code in Python, Scala,
      Java, TypeScript, Go, Bash, Hack/PHP — you name it. Go happens to be my current
      favorite, but tomorrow it might be something else. For me, the tool should
      fit the problem, not the other way around.
    </p>
    <h2 class="text-2xl pt-4">Where I've been</h2>
    <p class="mb-5 mt-2">
      My career has been a bit of a tour through different corners of tech. I've
      worked at massive companies like Meta, Microsoft, Google, and Amazon,
      where you learn how systems scale (and break) at ridiculous volumes. I've
      also spent time at smaller, engineering-heavy places like Radix Trading,
      where every line of code matters and there's no room to hide behind
      process.
      <br />
      <br />
      One of the most eye-opening experiences was my time at GetInData, a consulting
      company where I primarily worked with startup clients. Consulting taught me
      how to quickly dive into someone else's codebase, understand their business
      problems, and deliver solutions under tight timelines.
    </p>

    <h2 class="text-2xl pt-4">If you're here</h2>
    <p class="mb-5 mt-2">
      If you’re interested in hiring me, check out my <a
        href={"https://drive.google.com/file/d/1j3yjmZPbzp_XJ6oBDBYijkWAPlOx_rp8/view?usp=sharing"}
        target="_blank">resume</a
      >
      . And if you enjoy thinking about distributed systems, automation, or how to
      make software teams happier and faster, subscribe to the blog (<a
        href="/rss.xml"
        target="_blank"
        class="hover:text-text-link"
        title="Subscribe to RSS feed"
        ><i class="fa-solid fa-rss text-orange-500"></i> RSS</a
      >). I write when there's something worth saying, though.
    </p>
  </div>
</section>
