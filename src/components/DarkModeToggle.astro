---

---

<mode-toggle>
  <button
    class="unset text-lg ml-4 hover:text-text-link text-text-bold transition-colors duration-200"
    id="mode-toggle"
    role="switch"
    type="button"
    tabindex="0"
    aria-label="Toggle dark mode"
    title="Toggle dark mode"
  >
    <i id="theme-icon" class="fa-solid fa-sun invisible" aria-hidden="true"></i>
  </button>
</mode-toggle>

<script>
  function updateHTMLTheme(mode: "light" | "dark") {
    const themeColorMetaTag = document.head.querySelector(
      'meta[name="theme-color"]',
    );

    if (mode === "dark") {
      document.documentElement.classList.remove("light");
      document.documentElement.classList.add("dark");
      if (themeColorMetaTag) {
        // @ts-ignore
        themeColorMetaTag.content = "#020617";
      }
    } else {
      document.documentElement.classList.remove("dark");
      document.documentElement.classList.add("light");
      if (themeColorMetaTag) {
        // @ts-ignore
        themeColorMetaTag.content = "#f8fafc";
      }
    }
  }
  function updateStorageTheme(mode: "light" | "dark") {
    if (mode === "dark") {
      sessionStorage.setItem("theme", "dark");
    } else {
      sessionStorage.setItem("theme", "light");
    }
  }
  class ModeToggle extends HTMLElement {
    constructor() {
      super();
      let currentMode: "light" | "dark" =
        document.documentElement.classList.contains("dark") ? "dark" : "light";

      const toggle = this.querySelector("button");
      const iconElem = toggle?.querySelector("#theme-icon") as HTMLElement;

      if (iconElem) {
        if (currentMode === "dark") {
          iconElem.classList.remove("fa-sun");
          iconElem.classList.add("fa-moon");
        } else {
          iconElem.classList.remove("fa-moon");
          iconElem.classList.add("fa-sun");
        }

        iconElem.classList.remove("invisible");

        toggle?.addEventListener("click", () => {
          if (currentMode === "dark") {
            const modeToSwitch = "light";
            iconElem.classList.remove("fa-moon");
            iconElem.classList.add("fa-sun");
            updateHTMLTheme(modeToSwitch);
            updateStorageTheme(modeToSwitch);
            currentMode = modeToSwitch;
          } else {
            const modeToSwitch = "dark";
            iconElem.classList.remove("fa-sun");
            iconElem.classList.add("fa-moon");
            updateHTMLTheme(modeToSwitch);
            updateStorageTheme(modeToSwitch);
            currentMode = modeToSwitch;
          }
        });
      }
    }
  }

  customElements.define("mode-toggle", ModeToggle);
</script>
